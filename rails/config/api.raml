#%RAML 0.8
---
title: Print My Barcode
baseUri: http://localhost
version: 1.0

/label_types:
  post:
    description: Create a new Label Type
    body:
      application/vnd.api+json:
        schema: |
          {
            "data":
            {
              "type": "object",
              "required": true,
              "properties": {
                "type": {
                  "description": "The type of the object, here: 'label_type'",
                  "required": false,
                  "type": "string",
                  "example": "label_type"
                },
                "attributes": {
                  "name":{
                    "description": "The unique name name of the label type",
                    "required": true,
                    "type": "string",
                    "example": "Plate"
                  },
                  "feed_value":{
                    "description":  "Feed value to be finely adjusted (000 - 500)",
                    "required": true,
                    "type": "string",
                    "pattern": "/\A\d{3}\z/",
                    "example": "004"
                  },
                  "fine_adjustment":{
                    "description": "Print density fine adjustment value 00 to 10 (in units of 1 step)",
                    "required": true,
                    "type": "string",
                    "pattern": "/\A\d{2}\z/",
                    "example": "08"
                  },
                  "pitch_length":{
                    "description": "Pitch length of the label (4 digits)",
                    "required": true,
                    "type": "string",
                    "pattern": "/\A\d{4}\z/",
                    "example": "0110"
                  },
                  "print_width":{
                    "description": "Effective print width (4 digits)",
                    "required": true,
                    "type": "string",
                    "pattern": "/\A\d{4}\z/",
                    "example": "0920"
                  },
                  "print_length":{
                    "description": "Effective print length (4 digits)",
                    "required": true,
                    "type": "string",
                    "pattern": "/\A\d{4}\z/",
                    "example": "0080"
                  }
                }
              }
            }
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {
                  "id": "2",
                  "type": "label_types",
                  "attributes": {
                    "feed_value": "008",
                    "fine_adjustment": "04",
                    "pitch_length": "0100",
                    "print_width": "0350",
                    "print_length": "0450",
                    "name": "Label Type 7"
                  }
                }
              }
      422:
        body:
          application/json:
            example: |
              {
              "errors":
                {
                  "name": [ "can't be blank" ],
                  "pitch_length": [ "can't be blank", "is invalid" ],
                  "print_width": [ "can't be blank", "is invalid" ],
                  "print_length": [ "can't be blank","is invalid" ],
                  "feed_value": [ "can't be blank", "is invalid" ],
                  "fine_adjustment": [ "can't be blank", "is invalid"]
                }
              }
  get:
    description: Return all of the Label Types
    queryParameters:
      name:
        type: string
        description: Returns the Label Type with the given name
        example: filter[name]=Plate
        required: false
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data":
                [
                  {
                    "id": "1",
                    "type": "label_types",
                    "attributes": {
                      "feed_value": "008",
                      "fine_adjustment": "04",
                      "pitch_length": "0110",
                      "print_width": "0920",
                      "print_length": "0080",
                      "name": "Plate"
                    }
                  },
                  {
                    "id": "2",
                    "type": "label_types",
                    "attributes": {
                      "feed_value":"08",
                      "fine_adjustment":"022",
                      "pitch_length":"0430",
                      "print_width":"0300",
                      "print_length":"0400",
                      "name":"Tube"
                    }
                  },
                  {
                    "id": "3",
                    "type": "label_types",
                    "attributes": {
                      "feed_value":"08",
                      "fine_adjustment":"004",
                      "pitch_length":"0110",
                      "print_width":"0920",
                      "print_length":"0080",
                      "name":"Rack"
                    }
                  }
                ]
              }

/label_templates:
  get:
    description: Return a list of all of the Label Templates
    queryParameters:
      name:
        type: string
        description: Returns the Label Template with the given name
        example: filter[name]=LabWhere
        required: false
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data":
                [
                  {
                    "id": "1",
                    "type": "label_templates",
                    "attributes": {
                      "name": "LabWhere"
                    },
                    "relationships": {
                      "label_type": {
                        "data": {
                          "id": "1",
                          "type": "label_types"
                        }
                      },
                      "labels": {
                        "data":
                        [
                          {
                            "id": "1",
                            "type": "labels"
                          },
                          {
                            "id": "2",
                            "type": "labels"
                          },
                          {
                            "id": "3",
                            "type": "labels"
                          }
                        ]
                      }
                    }
                  }
                ],
                "included":
                [
                  {
                    "id": "1",
                    "type": "label_types",
                    "attributes": {
                      "feed_value": "008",
                      "fine_adjustment": "04",
                      "pitch_length": "0110",
                      "print_width": "0920",
                      "print_length": "0080",
                      "name": "Plate"
                    }
                  },
                  {
                    "id": "1",
                    "type": "labels",
                    "attributes": {
                      "name": "header"
                    },
                    "relationships": {
                      "bitmaps": {
                        "data":
                        [
                          {
                            "id": "1",
                            "type": "bitmaps"
                          },
                          {
                            "id": "2",
                            "type": "bitmaps"
                          }
                        ]
                      },
                      "barcodes": {
                        "data": [ ]
                      }
                    }
                  },
                  {
                    "id": "1",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0020",
                      "y_origin": "0035",
                      "field_name": "header_text_1",
                      "horizontal_magnification": "1",
                      "vertical_magnification": "1",
                      "font": "G",
                      "space_adjustment": "00",
                      "rotational_angles": "00"
                    }
                  },
                  {
                    "id": "2",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0020",
                      "y_origin": "0065",
                      "field_name": "header_text_2",
                      "horizontal_magnification": "1",
                      "vertical_magnification": "1",
                      "font": "G",
                      "space_adjustment": "00",
                      "rotational_angles": "00"
                    }
                  },
                  {
                    "id": "2",
                    "type": "labels",
                    "attributes": {
                      "name": "location"
                    },
                    "relationships": {
                      "bitmaps": {
                        "data":
                        [
                          {
                            "id": "3",
                            "type": "bitmaps"
                          },
                          {
                            "id": "4",
                            "type": "bitmaps"
                          }
                        ]
                      },
                      "barcodes":
                      {
                        "data":
                        [
                          {
                            "id": "5",
                            "type": "barcodes"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": "3",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "location",
                      "horizontal_magnification": "05",
                      "vertical_magnification": "1",
                      "font": "G",
                      "space_adjustment": "00",
                      "rotational_angles": "00"
                    }
                  },
                  {
                    "id": "4",
                    "type": "bitmaps",
                    "attributes": {
                        "x_origin": "0030",
                        "y_origin": "0065",
                        "field_name": "parent_location",
                        "horizontal_magnification": "05",
                        "vertical_magnification": "1",
                        "font": "G",
                        "space_adjustment": "00",
                        "rotational_angles": "00"
                    }
                  },
                  {
                    "id": "5",
                    "type": "barcodes",
                    "attributes": {
                      "x_origin": "0300",
                      "y_origin": "0000",
                      "field_name": "barcode",
                      "barcode_type": "9",
                      "one_module_width": "02",
                      "height": "0070"
                    }
                  },
                  {
                    "id": "3",
                    "type": "labels",
                    "attributes": {
                      "name": "footer"
                    },
                    "relationships": {
                      "bitmaps": {
                        "data":
                        [
                          {
                            "id": "6",
                            "type": "bitmaps"
                          },
                          {
                              "id": "7",
                              "type": "bitmaps"
                          }
                        ]
                      },
                      "barcodes": {
                        "data": [ ]
                      }
                    }
                  },
                  {
                    "id": "6",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0050",
                      "y_origin": "0035",
                      "field_name": "footer_text_1",
                      "horizontal_magnification": "1",
                      "vertical_magnification": "1",
                      "font": "G",
                      "space_adjustment": "00",
                      "rotational_angles": "00"
                    }
                  },
                  {
                    "id": "7",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0020",
                      "y_origin": "0065",
                      "field_name": "footer_text_2",
                      "horizontal_magnification": "1",
                      "vertical_magnification": "1",
                      "font": "G",
                      "space_adjustment": "00",
                      "rotational_angles": "00"
                    }
                  }
                ]
              }
  post:
    description: Create a new Label Template
    body:
      application/vnd.api+json:
        schema: |
          {
            "data":
            {
              "type": "object",
              "required": true,
              "properties": {
                "type": {
                  "description": "The type of the object, here: 'label_template'",
                  "required": false,
                  "type": "string",
                  "example": "label_template"
                },
                "attributes":{
                  "name": {
                    "description": "The unique name of the Label Template",
                    "required": true,
                    "type": "string",
                    "example": "LabWhere"
                  },
                  "label_type_id": {
                    "description": "The id of the Label Type with which the template is associated",
                    "required": true,
                    "type": "string",
                    "example": 1
                  },
                  "labels_attributes": {
                    "description": "List of labels for the label template. Each label will consist of a name, an array of bitmaps and an array of barcodes.",
                    "required": false,
                    "type": "array",
                    "properties" : {
                      "name":{
                        "description": "Label name, which should be unique for the label template",
                        "required": true,
                        "type": "string",
                        "pattern": "/\A[\w\_]+\z/",
                        "example": "label_1"
                      },
                      "bitmaps_attributes": {
                        "description": "An array of bitmaps that are part of the label",
                        "type": "array",
                        "required": false,
                        "properties": {
                          "field_name": {
                            "description": "The unique name of the field (unique in the context of the label template)",
                            "required": true,
                            "type": "string",
                            "pattern": "/\A[\w\_]+\z/",
                            "example": "bitmap_1"
                          },
                          "x_origin": {
                            "description": "Print origin of X-coordinate of barcode (fixed as 4 digits)",
                            "type": "string",
                            "required": true,
                            "pattern": "/\A\d{4}\z/",
                            "example": "0040"
                          },
                          "y_origin": {
                            "description": "Print origin of Y-coordinate of barcode (fixed as 4 digits)",
                            "type": "string",
                            "required": true,
                            "pattern": "/\A\d{4}\z/",
                            "example": "0060"
                          },
                          "horizontal_magnification":{
                            "description": "Character horizontal magnification (Two digit designation enables magnifications in 0.5 units)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{1,2}\z/",
                            "example": "05",
                            "default": "1"
                          },
                          "vertical_magnification":{
                            "description": "Character vertical magnification (The magnification can be designated in 0.1 units between 0.5 to 1)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{1,2}\z/",
                            "example": "05",
                            "default": "1"
                          },
                          "font":{
                            "description": "Type of font e.g. Helvetica medium",
                            "type": "string",
                            "required": false,
                            "format": "/\A[A-W]{1}\z/",
                            "example": "G",
                            "default": "G"
                          },
                          "space_adjustment":{
                            "description": "No of spaces between characters (00 - 99)",
                            "type": "string",
                            "format": "/\A\d{2}\z/",
                            "required": false,
                            "default": "00",
                            "example": "00"
                          },
                          "rotational_angles":{
                            "description": "Rotational angles of character and character string (mostly 00)",
                            "type": "string",
                            "required": false,
                            "format": "/\A\d{2}\z/",
                            "example": "00",
                            "default": "00"
                          }
                        }
                      },
                      "barcodes_attributes": {
                        "description": "An array of barcodes that are part of the label",
                        "type": "array",
                        "required": false,
                        "properties": {
                          "field_name": {
                            "description": "The unique name of the field",
                            "required": true,
                            "type": "string",
                            "pattern": "/\A[\w\_]+\z/",
                            "example": "barcode_1"
                          },
                          "x_origin": {
                            "description": "Print origin of X-coordinate of barcode (fixed as 4 digits)",
                            "type": "string",
                            "required": true,
                            "pattern": "/\A\d{4}\z/",
                            "example": "0040"
                          },
                          "y_origin": {
                            "description": "Print origin of Y-coordinate of barcode (fixed as 4 digits)",
                            "type": "string",
                            "required": true,
                            "pattern": "/\A\d{4}\z/",
                            "example": "0060"
                          },
                          "barcode_type": {
                            "description": "A single letter or number indicating the type of barcode e.g. code128 - 9, EAN13 - 5, 2D - Q",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A[0-9A-Z]{1}\z/",
                            "default": "5",
                            "example": "Q"
                          },
                          "type_of_check_digit": {
                            "description": "Type of check digit (1-5)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{1}\z/",
                            "example": "2",
                            "default": "3"
                          },
                          "one_module_width": {
                            "description": "1-module width 0-15 in dots",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{2}\z/",
                            "example": "06",
                            "default": "02"
                          },
                          "one_cell_width": {
                            "description": "1-cell width 00 to 99 (in dots)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{2}\z/",
                            "example": "99",
                            "default": "01"
                          },
                          "rotational_angle": {
                            "description": "rotational angle of barcode (0 - 0, 1 - 90, 2 - 180, 3 - 270)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{1}\z/",
                            "example": "1",
                            "default": "1"
                          },
                          "height": {
                            "description": "Height of barcode (0001 - 1000)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{4}\z/",
                            "example": "0070",
                            "default": "0070"
                          },
                          "no_of_columns": {
                            "description": "Number of columns for PDF417 barcodes (01-30)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{2}\z/",
                            "example": "04",
                            "default": "01"
                          },
                          "bar_height": {
                            "description": "Height of bar for PDF417 barcodes (000-0100)",
                            "type": "string",
                            "required": false,
                            "pattern": "/\A\d{4}\z/",
                            "example": "0010",
                            "default": "0010"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {
                  "id": 1,
                  "type": "label_templates",
                  "attributes":{
                    "name": "LabWhere"
                  },
                  "relationships":{
                    "label_type":{
                      "data":{
                        "id": "1",
                        "type": "label_types"
                      }
                    },
                    "labels": {
                      "data":
                      [
                        {
                          "id": "13",
                          "type": "labels"
                        },
                        {
                          "id": "14",
                          "type": "labels"
                        }
                      ]
                    }
                  }
                },
                "included":
                [
                  {
                    "id": "1",
                    "type": "label_types",
                    "attributes": {
                      "feed_value": "008",
                      "fine_adjustment": "04",
                      "pitch_length": "0110",
                      "print_width": "0920",
                      "print_length": "0080",
                      "name": "Plate"
                    }
                  },
                  {
                    "id": "13",
                    "type": "labels",
                    "attributes": {
                      "name": "label_13"
                    },
                    "relationships": {
                      "bitmaps": {
                        "data":
                        [
                          {
                            "id": "39",
                            "type": "bitmaps"
                          },
                          {
                            "id": "40",
                            "type": "bitmaps"
                          }
                        ]
                      },
                      "barcodes": {
                        "data":
                        [
                          {
                            "id": "41",
                            "type": "barcodes"
                          },
                          {
                            "id": "42",
                            "type": "barcodes"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": "39",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "bitmap_15",
                      "horizontal_magnification": "2",
                      "vertical_magnification": "4",
                      "font": "A",
                      "space_adjustment": "12",
                      "rotational_angles": "14"
                    }
                  },
                  {
                    "id": "40",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "bitmap_16",
                      "horizontal_magnification": "2",
                      "vertical_magnification": "4",
                      "font": "A",
                      "space_adjustment": "12",
                      "rotational_angles": "14"
                    }
                  },
                  {
                    "id": "41",
                    "type": "barcodes",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "barcode_15",
                      "barcode_type": "7",
                      "one_module_width": "09",
                      "height": "0170",
                      "one_cell_width": null,
                      "type_of_check_digit": null,
                      "rotational_angle": null,
                      "no_of_columns": null,
                      "bar_height": null
                    }
                  },
                  {
                    "id": "42",
                    "type": "barcodes",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "barcode_16",
                      "barcode_type": "7",
                      "one_module_width": "09",
                      "height": "0170",
                      "one_cell_width": null,
                      "type_of_check_digit": null,
                      "rotational_angle": null,
                      "no_of_columns": null,
                      "bar_height": null
                    }
                  },
                  {
                    "id": "14",
                    "type": "labels",
                    "attributes": {
                      "name": "label_14"
                    },
                    "relationships": {
                      "bitmaps": {
                        "data":
                        [
                          {
                            "id": "43",
                            "type": "bitmaps"
                          },
                          {
                            "id": "44",
                            "type": "bitmaps"
                          }
                        ]
                      },
                      "barcodes": {
                        "data":
                        [
                          {
                            "id": "45",
                            "type": "barcodes"
                          },
                          {
                            "id": "46",
                            "type": "barcodes"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": "43",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "bitmap_17",
                      "horizontal_magnification": "2",
                      "vertical_magnification": "4",
                      "font": "A",
                      "space_adjustment": "12",
                      "rotational_angles": "14"
                    }
                  },
                  {
                    "id": "44",
                    "type": "bitmaps",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "bitmap_18",
                      "horizontal_magnification": "2",
                      "vertical_magnification": "4",
                      "font": "A",
                      "space_adjustment": "12",
                      "rotational_angles": "14"
                    }
                  },
                  {
                    "id": "45",
                    "type": "barcodes",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "barcode_17",
                      "barcode_type": "7",
                      "one_module_width": "09",
                      "height": "0170"
                    }
                  },
                  {
                    "id": "46",
                    "type": "barcodes",
                    "attributes": {
                      "x_origin": "0030",
                      "y_origin": "0035",
                      "field_name": "barcode_18",
                      "barcode_type": "7",
                      "one_module_width": "09",
                      "height": "0170"
                    }
                  }
                ]
              }
      422:
        body:
          application/json:
            example: |
              {
                "errors":{
                  "name":["can't be blank"],
                  "label_type":["does not exist"],
                  "labels.bitmaps.field_name":["can't be blank","is invalid"],
                  "labels.bitmaps.x_origin":["can't be blank","is invalid"],
                  "labels.bitmaps.y_origin":["can't be blank","is invalid"],
                  "labels.bitmaps":["is invalid"],"name":["has already been taken"],
                  "labels":["is invalid"]
                }
              }
/print_jobs:
  post:
    description: Print a label to a named printer and selected label template
    body:
      application/vnd.api+json:
        schema: |
          {
            "data":{
              "type": "object",
              "required": true,
              "properties": {
                "type": {
                  "description": "The type of the object, here: 'printer'",
                  "required": false,
                  "type": "string",
                  "example": "printer"
                },
                "attributes":{
                  "printer_name": {
                    "description": "The name of the printer to print the job to",
                    "required": true,
                    "example": "d304bc"
                  },
                  "label_template_id": {
                    "description": "The id of the label template to use for the print job",
                    "required": true,
                    "example": 1
                  },
                  "labels":{
                    "description": "The labels that are to be printed",
                    "required": true,
                    "type": "object",
                    "properties": {
                      "header": {
                        "description": "Header label",
                        "required": false,
                        "type": "object",
                        "example": {"header_text_1": "header_text_1", "header_text_2": "header_text_2"}
                      },
                      "body": {
                        "description": "A body of labels",
                        "required": true,
                        "type": "array",
                        "example": [{"location": {"location": "location", "parent_location": "parent_location", "barcode": "barcode"}}, {"location": {"location": "location", "parent_location": "parent_location", "barcode": "barcode"}}]
                      },
                      "footer": {
                        "description": "Footer label",
                        "required": false,
                        "type": "object",
                        "example": {"footer_text_1": "footer_text_1", "footer_text_2": "footer_text_2"}
                      }
                    }
                  }
                }
              }
            }
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {
                  "id": "",
                  "type": "print_jobs",
                  "attributes": {
                    "printer_name": "d304bc",
                    "label_template_id": 1,
                    "labels": {
                      "header": {
                        "header_text_1": "header_text_1",
                        "header_text_2": "header_text_2"
                      },
                      "footer": {
                        "footer_text_1": "footer_text_1",
                        "footer_text_2": "footer_text_2"
                      },
                      "body": [
                        {
                          "location": {
                            "location": "location",
                            "parent_location": "parent_location",
                            "barcode": "barcode"
                          }
                        },
                        {
                          "location": {
                            "location": "location",
                            "parent_location": "parent_location",
                            "barcode": "barcode"
                          }
                        }
                      ]
                    }
                  }
                }
              }
      422:
        body:
          application/json:
            example: |
              {
                "errors":
                {
                  "labels": ["can't be blank","There should be some labels"],
                  "printer":["Printer does not exist"],
                  "label_template":["Label template does not exist"]
                }
              }
/printers:
  get:
    description: Return all of the Printers
    queryParameters:
      name:
        type: string
        description: Returns the printer with the given name
        example: filter[name]=d304bc
        required: false
      protocol:
        type: string
        description: Returns all printers with the given protocol
        example: filter[protocol]=LPD
        required: false
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "data": [
                  {
                    "id": "1",
                    "type": "printers",
                    "attributes": {
                      "name": "ippbc",
                      "protocol": "LPD"
                    }
                  },
                  {
                    "id": "2",
                    "type": "printers",
                    "attributes": {
                      "name": "d304bc",
                      "protocol": "LPD"
                      }
                  },
                  {
                    "id": "3",
                    "type": "printers",
                    "attributes": {
                      "name": "e367bc",
                      "protocol": "LPD"
                    }
                  }
                ]
              }
  post:
    description: Create a new printer
    body:
      application/vnd.api+json:
        schema: |
          {
            "data":{
              "type": "object",
              "required": true,
              "properties": {
                "type": {
                  "description": "The type of the object, here: 'printer'",
                  "required": false,
                  "type": "string",
                  "example": "printer"
                },
                "attributes":{
                  "name": {
                    "description": "The unique name of the printer. Relates to the printer name on the network",
                    "required": true,
                    "type": "string",
                    "example": "d304bc"
                  },
                  "protocol": {
                    "description": "The protocol which the printer uses",
                    "required": false,
                    "type": "string",
                    "enum": ["LPD", "IPP", "TOF"],
                    "default": "LPD"
                  }
                }
              }
            }
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "data": {
                  "id": "1",
                  "type": "printers",
                  "attributes": {
                    "name": "e576bc",
                    "protocol": "LPD"
                  }
                }
              }
      422:
        body:
          application/json:
            example: |
              {
                "errors":
                {
                  "name": ["can't be blank"]
                }
              }
