#%RAML 0.8
---
title: Print My Barcode
baseUri: http://localhost
version: 1.0

/label_types:
  post:
    description: Create a new Label Type
    body:
      application/json:
        schema: |
          {
            "label_type":
            {
              "type": "object",
              "required": true,
              "properties": {
                "name":{
                  "description": "The name of the label",
                  "required": true,
                  "type": "string",
                  "example": "Plate"
                },
                "feed_value":{
                  "description":  "Feed value to be finely adjusted (000 - 500)",
                  "required": true,
                  "type": "string",
                  "example": "004"
                },
                "fine_adjustment":{
                  "description": "Print density fine adjustment value 00 to 10 (in units of 1 step)",
                  "required": true,
                  "type": "string",
                  "example": "08"
                },
                "pitch_length":{
                  "description": "Pitch length of the label",
                  "required": true,
                  "type": "string",
                  "example": "0110"
                }, 
                "print_width":{
                  "description": "Effective print width",
                  "required": true,
                  "type": "string",
                  "example": "0920"
                }, 
                "print_length":{
                  "description": "Effective print length",
                  "required": true,
                  "type": "string",
                  "example": "0080"
                }
              }
            }
          }
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id":1,
                  "feed_value":"008",
                  "fine_adjustment":"02",
                  "pitch_length":"0430",
                  "print_width":"0300",
                  "print_length":"0400",
                  "name":"Tube"
                }
              ]
      422:
        body:
          application/json:
            example: |
              {
              "errors":
                {
                  "name": [ "can't be blank" ],
                  "pitch_length": [ "can't be blank", "is invalid" ],
                  "print_width": [ "can't be blank", "is invalid" ],
                  "print_length": [ "can't be blank","is invalid" ],
                  "feed_value": [ "can't be blank", "is invalid" ],
                  "fine_adjustment": [ "can't be blank", "is invalid"]
                }
              }
  get:
    description: Return all of the Label Types 
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id":2,
                  "feed_value":"08",
                  "fine_adjustment":"022",
                  "pitch_length":"0430",
                  "print_width":"0300",
                  "print_length":"0400",
                  "name":"Tube"
                },
                {
                  "id":3,
                  "feed_value":"08",
                  "fine_adjustment":"004",
                  "pitch_length":"0110",
                  "print_width":"0920",
                  "print_length":"0080",
                  "name":"Rack"
                },
                {
                  "id":4,
                  "feed_value":"08",
                  "fine_adjustment":"004",
                  "pitch_length":"0110",
                  "print_width":"0920",
                  "print_length":"0080",
                  "name":"Plate"
                }
              ]
/label_templates:
  get:
    description: Return a list of all of the Label Templates
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": 1,
                  "name": "LabWhere",
                  "label_type":
                    {
                      "id":4,
                      "feed_value":"08",
                      "fine_adjustment":"004",
                      "pitch_length":"0110",
                      "print_width":"0920",
                      "print_length":"0080",
                      "name":"Plate"
                    },
                  "labels":
                  [
                    {
                      "name": "header",
                      "bitmaps": 
                      [
                        {
                          "x_origin":"0030",
                          "y_origin":"0035",
                          "field_name":"location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        },
                        {
                          "x_origin":"0030",
                          "y_origin":"0065",
                          "field_name":"parent_location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        }
                      ],
                      "barcodes":
                      [
                      ]
                    },
                    {
                      "name":"location",
                      "bitmaps":
                      [
                        {
                          "x_origin":"0030",
                          "y_origin":"0035",
                          "field_name":"location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        },
                        {
                          "x_origin":"0030",
                          "y_origin":"0065",
                          "field_name":"parent_location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        }
                      ],
                      "barcodes":
                      [
                        {
                          "x_origin":"0300",
                          "y_origin":"0000",
                          "field_name":"barcode",
                          "barcode_type":"9",
                          "one_module_width":"02",
                          "height":"0070"
                        }
                      ]
                    },
                    {
                      "name":"footer",
                      "bitmaps":
                      [
                        {
                          "x_origin":"0050",
                          "y_origin":"0035",
                          "field_name":"footer_text_1",
                          "horizontal_magnification":"1",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        },
                        {
                          "x_origin":"0020",
                          "y_origin":"0065",
                          "field_name":"footer_text_2",
                          "horizontal_magnification":"1",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        }
                      ],
                      "barcodes":
                      [
                      ]
                    ]
                  }
                }
              ]
  post:
    description: Create a new Label Template
    body:
      application/json:
        schema: |
          {
            "label_template":
            {
              "type": "object",
              "required": true,
              "properties": {
                "name": {
                  "description": "The unique name of the Label Template",
                  "required": true,
                  "type": "string"
                  "example": "LabWhere"
                },
                "label_type_id": {
                  "description": "The id of the Label Type with which the template is associated",
                  "required": true,
                  "type": "string",
                  "example": 1
                }
                "labels_attributes": {
                  "description": "List of labels for the label template. Each label will consist of a name, an array of bitmaps and an array of barcodes."
                  "required": false
                  "type": "array"
                  "properties" : {
                    "name":{
                      "description": "Label name, which should be unique for the label template",
                      "required": true,
                      "type": "string"
                      "example": "label_1"
                    },
                    "bitmaps_attributes": {
                      "description": "An array of bitmaps that are part of the label",
                      "type": array,
                      "required": false,
                      "properties": {
                        "field_name": {
                          "description": "The unique name of the field",
                          "required": true,
                          "type": "string",
                          "example": "bitmap_1"
                        },
                        "x_origin": {
                          "description": "Print origin of X-coordinate of barcode",
                          "type": "string",
                          "required": true,
                          "example": "0040"
                        },
                        "y_origin": {
                          "description": "Print origin of Y-coordinate of barcode",
                          "type": string,
                          "required": true,
                          "example": "0060"
                        },
                        "horizontal_magnification":{
                          "description": "Character horizontal magnification (Two digit designation enables magnifications in 0.5 units)",
                          "type": "string",
                          "required": false,
                          "example": "05"
                        }, 
                        "vertical_magnification":{
                          "description": "Character vertical magnification (The magnification can be designated in 0.1 units between 0.5 to 1)",
                          "type": string,
                          "required": false,
                          "example": "05"
                        },
                        "font":{
                          "description": "Type of font e.g. Helvetica medium",
                          "type": "string",
                          "required": false,
                          "example": "G"
                        },
                        "space_adjustment":{
                          "description": "No of spaces between characters (00 - 99)",
                          "type": string,
                          "required": false
                        }, 
                        "rotational_angles":{
                          "description": "Rotational angles of character and character string (mostly 00)"
                          "type": string,
                          "required": false,
                          "example": "00"
                        }
                      }
                    },
                    "barcodes_attributes": {
                      "description": "An array of barcodes that are part of the label",
                      "type": "array",
                      "required": false,
                      "properties": {
                        "field_name": {
                          "description": "The unique name of the field",
                          "required": true,
                          "type": "string",
                          "example": "barcode_1"
                        },
                        "x_origin": {
                          "description": "Print origin of X-coordinate of barcode",
                          "type": "string",
                          "required": true,
                          "example": "0040"
                        },
                        "y_origin": {
                          "description": "Print origin of Y-coordinate of barcode",
                          type: string,
                          required: false,
                          example: "0060"
                        },
                        barcode_type: {
                          description: "A single letter or number indicating the type of barcode e.g. code128, EAN13, 2D",
                          type: string,
                          required: false,
                          example: "Q"
                        },
                        one_module_width: {
                          description: "1-module width 0-15 in dots",
                          "type": "string",
                          "required": false,
                          "example": "06"
                        },
                        "one_cell_width": {
                          "description": "1-cell width 00 to 99 (in dots)",
                          "type": "string",
                          "required": false,
                          "example": "99"
                        },
                        "rotational_angle": {
                          "description": "rotational angle of barcode (0 - 0, 1 - 90, 2 - 180, 3 - 270)",
                          "type": "string",
                          "required": false,
                          "example": "1"
                        },
                        "height": {
                          "description": "Height of barcode (0001 - 1000)",
                          "type": "string",
                          "required": false,
                          "example": "0070"
                        }
                      }
                    }
                    
                  }
                }
              }

            }
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "id": 1,
                  "name": "LabWhere",
                  "label_type":
                    {
                      "id":4,
                      "feed_value":"08",
                      "fine_adjustment":"004",
                      "pitch_length":"0110",
                      "print_width":"0920",
                      "print_length":"0080",
                      "name":"Plate"
                    },
                  "labels":
                  [
                    {
                      "name": "header",
                      "bitmaps": 
                      [
                        {
                          "x_origin":"0030",
                          "y_origin":"0035",
                          "field_name":"location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        },
                        {
                          "x_origin":"0030",
                          "y_origin":"0065",
                          "field_name":"parent_location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        }
                      ],
                      "barcodes":
                      [
                      ]
                    },
                    {
                      "name":"location",
                      "bitmaps":
                      [
                        {
                          "x_origin":"0030",
                          "y_origin":"0035",
                          "field_name":"location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        },
                        {
                          "x_origin":"0030",
                          "y_origin":"0065",
                          "field_name":"parent_location",
                          "horizontal_magnification":"05",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        }
                      ],
                      "barcodes":
                      [
                        {
                          "x_origin":"0300",
                          "y_origin":"0000",
                          "field_name":"barcode",
                          "barcode_type":"9",
                          "one_module_width":"02",
                          "height":"0070"
                        }
                      ]
                    },
                    {
                      "name":"footer",
                      "bitmaps":
                      [
                        {
                          "x_origin":"0050",
                          "y_origin":"0035",
                          "field_name":"footer_text_1",
                          "horizontal_magnification":"1",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        },
                        {
                          "x_origin":"0020",
                          "y_origin":"0065",
                          "field_name":"footer_text_2",
                          "horizontal_magnification":"1",
                          "vertical_magnification":"1",
                          "font":"G",
                          "space_adjustment":"00",
                          "rotational_angles":"00"
                        }
                      ],
                      "barcodes":
                      [
                      ]
                    ]
                  }
                }
      422:
        body:
          application/json:
            example: |
              {
                "errors":{
                  "name":["can't be blank"],
                  "label_type":["does not exist"],
                  "labels.bitmaps.field_name":["can't be blank","is invalid"],
                  "labels.bitmaps.x_origin":["can't be blank","is invalid"],
                  "labels.bitmaps.y_origin":["can't be blank","is invalid"],
                  "labels.bitmaps":["is invalid"],"name":["has already been taken"],
                  "labels":["is invalid"]
                }
              }
/print_jobs:
  post:
    description: Print a label to a named printer and selected label template
    body:
      application/json:
        schema: |
          {
            "print_job":
            {
              "type": "object",
              "required": true,
              "properties":{
                "printer_name": {
                  "description": "The name of the printer to print the job to",
                  "required": true,
                  "example": "d304bc"
                },
                "label_template_id": {
                  "description": "The id of the label template to use for the print job",
                  "required": true,
                  "example": 1
                },
                "labels":{
                  "description": "The labels that are to be printed",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "header": {
                      "description": "Header label",
                      "required": false,
                      "type": "object",
                      "example": {"header_text_1": "header_text_1", "header_text_2": "header_text_2"}
                    },
                    "body": {
                      "description": "A body of labels",
                      "required": true,
                      "type": "array",
                      "example": [{"location": {"location": "location", "parent_location": "parent_location", "barcode": "barcode"}}, {"location": {"location": "location", "parent_location": "parent_location", "barcode": "barcode"}}]
                    },
                    "footer": {
                      "description": "Footer label",
                      "required": false,
                      "type": "object",
                      "example": {"footer_text_1": "footer_text_1", "footer_text_2": "footer_text_2"}
                    }
                  }
                }
              }
            }
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "printer_name": "d304bc",
                "label_template_id": 1,
                "labels": {
                  "header": {
                    "header_text_1": "header_text_1",
                    "header_text_2": "header_text_2"
                  }, 
                  "footer": {
                    "footer_text_1": "footer_text_1",
                    "footer_text_2": "footer_text_2"
                  }, 
                  "body": [
                    {
                      "location": {
                        "location": "location", 
                        "parent_location": "parent_location",
                        "barcode": "barcode"
                       }
                    }, 
                    {
                      "location": {
                        "location": "location", 
                        "parent_location": "parent_location",
                        "barcode": "barcode"
                      }
                    }
                  ]
                } 
              }
      422:
        body:
          application/json:
            example: |
              {
                "errors":
                {
                  "labels": ["can't be blank","There should be some labels"],
                  "printer":["Printer does not exist"],
                  "label_template":["Label template does not exist"]
                }
              }
